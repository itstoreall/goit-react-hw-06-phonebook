{"version":3,"sources":["components/PhonebookForm/Form.jsx","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/PhonebookForm/Form.module.scss","components/ContactList/Contacts.module.scss","App.module.scss","components/Filter/Filter.module.scss"],"names":["Form","onSubmit","useState","name","setName","number","setNumber","handleInputForm","e","target","value","className","form","label","input","onChange","button","tupe","onClick","preventDefault","newContact","id","uuidv4","ContactItem","contact","onDeleteContact","contactItem","ContactList","contacts","contactList","map","Filter","App","initialValue","setContacts","filter","setFilter","handleInputFilter","normalizedFilter","toLowerCase","filteredContacts","includes","wrapper","title","onInputChange","find","alert","prevState","subtitle","defaultProps","ReactDOM","render","StrictMode","dataBase","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.65de1d28.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport { form, label, input, button } from './Form.module.scss';\n\nconst Form = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  // Записывает значение инпута в стейт\n  const handleInputForm = e => {\n    const { name, value } = e.target;\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  // Создает объект контакта\n  const handleAddContact = e => {\n    e.preventDefault();\n\n    const newContact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n\n    onSubmit(newContact);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={form}>\n      <label className={label}>\n        Name\n        <input\n          className={input}\n          name=\"name\"\n          value={name}\n          onChange={handleInputForm}\n        />\n      </label>\n\n      <label className={label}>\n        Number\n        <input\n          className={input}\n          name=\"number\"\n          value={number}\n          onChange={handleInputForm}\n        />\n      </label>\n\n      <button className={button} tupe=\"submit\" onClick={handleAddContact}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import PropTypes from 'prop-types';\nimport { contactItem, button } from './Contacts.module.scss';\n\nconst ContactItem = ({ contact: { id, name, number }, onDeleteContact }) => {\n  return (\n    <li className={contactItem}>\n      <span>\n        {name}: {number}\n      </span>\n      <button className={button} onClick={() => onDeleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import ContactItem from './ContactItem';\nimport PropTypes from 'prop-types';\nimport { contactList } from './Contacts.module.scss';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={contactList}>\n    {contacts.map(contact => (\n      <ContactItem\n        key={contact.id}\n        contact={contact}\n        onDeleteContact={onDeleteContact}\n      />\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport { label, input } from './Filter.module.scss';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={label}>\n      Find contacts by name\n      <input className={input} value={value} onChange={onChange} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { useState } from 'react';\nimport Form from './components/PhonebookForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport PropTypes from 'prop-types';\n\nimport { wrapper, title, subtitle } from './App.module.scss';\n\nconst App = ({ initialValue }) => {\n  const [contacts, setContacts] = useState(initialValue);\n  const [filter, setFilter] = useState('');\n\n  // Записывает значения инпута в стейт\n  const handleInputFilter = e => setFilter(e.target.value);\n\n  // Добавляет новый контакт в стейт\n  const handleSubmit = newContact =>\n    contacts.find(\n      ({ name }) => name.toLowerCase() === newContact.name.toLowerCase(),\n    )\n      ? alert(`${newContact.name} is already in contacts.`)\n      : setContacts(prevState => [newContact, ...prevState]);\n\n  // Фильтрация контактов\n  const normalizedFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n\n  const handleDeleteContact = id =>\n    setContacts(contacts.filter(contact => contact.id !== id));\n\n  return (\n    <div className={wrapper}>\n      <h1 className={title}>Phonebook</h1>\n      <Form onInputChange={handleInputFilter} onSubmit={handleSubmit} />\n      <h2 className={subtitle}>Contacts</h2>\n      <Filter value={filter} onChange={handleInputFilter} />\n      <ContactList\n        contacts={filteredContacts}\n        filter={filter}\n        onInputChange={handleInputFilter}\n        onDeleteContact={handleDeleteContact}\n      />\n    </div>\n  );\n};\n\nApp.defaultProps = {\n  initialValue: [],\n};\n\nApp.propTypes = {\n  initialValue: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport dataBase from './components/dataBase/dataBase.json';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App initialValue={dataBase} />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3-unr\",\"label\":\"Form_label__2aPb1\",\"input\":\"Form_input__2gucq\",\"button\":\"Form_button__3ZW4q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Contacts_label__1FN1x\",\"input\":\"Contacts_input__15bVW\",\"contactList\":\"Contacts_contactList__1bH7v\",\"contactItem\":\"Contacts_contactItem__3MiV1\",\"button\":\"Contacts_button__ufCm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__RCHjb\",\"title\":\"App_title__2oBiX\",\"subtitle\":\"App_subtitle__3q6oi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2pNgv\",\"input\":\"Filter_input__YmgBH\"};"],"sourceRoot":""}